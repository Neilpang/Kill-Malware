<#
.SYNOPSIS  
all malware go to hell!

.DESCRIPTION
run this script will lead your PC to unable to smoothly install the some malwares 
if you mind , don't run it . 

.EXAMPLE
.\Kill-Malware.ps1 (runas admin)

.NOTES
author:Vizo
date:  2017/2/28

.LINK
source project:https://liwei2.com/2015/11/27/378.html
latest project:
#>

write-Host "
                 -------流氓软件终结者-------
   -----------------------------------------------------------
   │      百度杀毒    │　   百度卫士   │   360安全卫士    │
   -----------------------------------------------------------
   │      360杀毒     │　   QQ电脑管家 │   瑞星杀毒软件   │
   -----------------------------------------------------------
   │      金山毒霸    │　   金山卫士   │ CNNIC(输入C查看原因)     │
   -----------------------------------------------------------
                  Powered by Leave and Vizo
   
            We have a dream: all malware go to hell ! 
   -----------------------------------------------------------             
" -ForegroundColor Green

$isUserWantToSeeCNNIC = Read-Host "输入C查看CNNIC介绍,回车或输入其它继续:"
if ($isUserWantToSeeCNNIC -eq "C"){
    Write-Host "CNNIC是中国互联网络信息中心。
                2015年，因CNNIC发行的一个中级CA被发现发行了Google域名的假证书
                而且曾有人利用自签名的CNNIC证书对GitHub进行中间人攻击
                并被指攻击来源很可能与防火长城有关
                许多用户选择不信任CNNIC颁发的数字证书
                并引起对CNNIC滥用证书颁发权力的担忧
                2015年4月2日，Google宣布不再承认CNNIC所颁发的电子证书
                4月4日，继Google之后，Mozilla也宣布不再承认CNNIC所颁发的电子证书。
                2016年8月，CNNIC官方网站已放弃自行发行的根证书，改用由DigiCert颁发的证书
                来自Wikipedia:https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9C%8B%E4%BA%92%E8%81%AF%E7%B6%B2%E7%B5%A1%E4%BF%A1%E6%81%AF%E4%B8%AD%E5%BF%83 " -ForegroundColor Yellow
}

Write-Host "`n"
Write-Host "请同意管理员权限的申请,按下任意键开始." -ForegroundColor "Red"
[Console]::Readkey() | Out-Null ;

# check for permissions 
$currentWi = [Security.Principal.WindowsIdentity]::GetCurrent()
$currentWp = [Security.Principal.WindowsPrincipal]$currentWi
if( -not $currentWp.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)){
    $boundPara = ($MyInvocation.BoundParameters.Keys | foreach{
        '-{0} {1}' -f  $_ ,$MyInvocation.BoundParameters[$_]} ) -join ' '
    $currentFile = (Resolve-Path  $MyInvocation.InvocationName).Path
    $fullPara = $boundPara + ' ' + $args -join ' '
    Start-Process "$psHome\powershell.exe"   -ArgumentList "$currentFile $fullPara" -verb runas
    return
}

$PSScriptRoot
$program = "C:\Program Files"
$programx86 = "C:\Program Files (x86)"
$appdata = Get-Childitem env:APPDATA | %{ $_.Value } 
<# firstly I write so stupid
$fileList = Get-ChildItem "$PSScriptRoot\CA\"  *.cer | %{$_.Name} | Out-File "$PSScriptRoot\CAlisttmp.txt"
$lineNum =  (Get-Content "$PSScriptRoot\CAlisttmp.txt").Length
for($i=0;$i -lt $lineNum;$i++){
    $currentLineName=(Get-Content "$PSScriptRoot\CAlisttmp.txt" -TotalCount $lineNum)[-($lineNum)+$i]
    certutil -f -addstore -user “Disallowed” "$PSScriptRoot\CA\$currentLineName"
}
Remove-Item "$PSScriptRoot\CAlisttmp.txt" -Force
#>

# block digital certificate
Write-Host "`n"
Write-Host "正在屏蔽CA目录下的所有证书..."
ForEach($file in Dir "$PSScriptRoot\CA"){
    certutil -f -addstore -user “Disallowed” "$PSScriptRoot\CA\$file"
}
Write-Host "`n"
Write-Host "已屏蔽" 

# set directory permissions
Write-Host "`n"
Write-Host "正在屏蔽malware系列软件的目录权限..."
# Baidu 
New-Item "$program\Baidu\BaiduAn" -ItemType Directory
New-Item "$program\Baidu\BaiduSd" -ItemType Directory
New-Item "$appdata\Baidu" -ItemType Directory
New-Item "$programx86\Baidu\BaiduAn" -ItemType Directory
New-Item "$programx86\Baidu\BaiduSd" -ItemType Directory
for($i = 1;$i -le 9;$i++ ){
     for($j = 0;$j -le 9; $j++ ){
         New-Item "$program\BaiduSd$i.$j" -ItemType Directory
         attrib +s +h "$program\BaiduSd$i.$j"
         cacls "$program\BaiduSd$i.$j" /e /d Everyone
     }
}
for($i = 1;$i -le 9;$i++ ){
     for($j = 0;$j -le 9; $j++ ){
         New-Item "$programx86\BaiduSd$i.$j" -ItemType Directory
         attrib +s +h "$programx86\BaiduSd$i.$j"
         cacls "$programx86\BaiduSd$i.$j" /e /d Everyone
     }
}
cacls "$program\Baidu\BaiduAn" /e /d Everyone
cacls "$program\Baidu\BaiduSd" /e /d Everyone
cacls "$appdata\Baidu" /e /d Everyone
cacls "$programx86\Baidu\BaiduAn" /e /d Everyone
cacls "$programx86\Baidu\BaiduSd" /e /d Everyone

# QiHoo 360d
New-Item "$program\360\360safe" -ItemType Directory
New-Item "$program\360\360sd" -ItemType Directory
New-Item "$programx86\360\360safe" -ItemType Directory
New-Item "$programx86\360\360sd" -ItemType Directory
cacls "$program\360\360safe" /e /d Everyone
cacls "$program\360\360sd" /e /d Everyone
cacls "%ProgramFiles(x86)%\360\360safe" /e /d Everyone
cacls "%ProgramFiles(x86)%\360\360sd" /e /d Everyone

# Kingsoft
New-Item "$program\ksafe" -ItemType Directory
New-Item "$program\kingsoft\kingsoft antivirus" -ItemType Directory
New-Item "$programx86\ksafe" -ItemType Directory
New-Item "$programx86\kingsoft\kingsoft antivirus" -ItemType Directory
cacls "$program\ksafe" /e /d Everyone
cacls "$program\kingsoft\kingsoft antivirus" /e /d Everyone
cacls "$programx86\ksafe" /e /d Everyone
cacls "$programx86\kingsoft\kingsoft antivirus" /e /d Everyone

# Tencent 
New-Item "$program\Tencent\QQPCMgr" -ItemType Directory
New-Item "$appdata\Tencent\QQPCMgr" -ItemType Directory
New-Item "$programx86\Tencent\QQPCMgr"  -ItemType Directory
cacls "$program\Tencent\QQPCMgr" /e /d Everyone
cacls "$appdata\Tencent\QQPCMgr" /e /d Everyone
cacls "$programx86\Tencent\QQPCMgr" /e /d Everyone

# Rising
New-Item "$program\Rising" -ItemType Directory
New-Item "$program\Rising\Rav" -ItemType Directory
New-Item "$programx86\Rising" -ItemType Directory
New-Item "$programx86\Rising\Rav" -ItemType Directory
cacls "$program\Rising\Rav" /e /d Everyone
cacls "$program\Rising" /e /d Everyone
cacls "$programx86\Rising\Rav" /e /d Everyone
cacls "$programx86\Rising" /e /d Everyone
Write-Host "`n"
Write-Host "已设置权限"

# block IP and URLs
Write-Host "`n"
Write-Host "正在拉黑下载地址"
Get-content "$PSScriptRoot\latestBlockhosts.txt" | Add-content "C:\Windows\System32\drivers\etc\hosts" -Force
Write-Host "`n"
Write-Host "已拉黑下载地址"

Write-Host "`n"
Write-Host "全部完成,按下任意键退出"
[Console]::Readkey() | Out-Null ;







